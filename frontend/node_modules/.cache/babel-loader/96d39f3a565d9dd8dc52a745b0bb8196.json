{"ast":null,"code":"var _jsxFileName = \"/Users/maxencebacquart/Documents/ECE/Web/Git/PROJECT_WEB_OCRES/frontend/src/components/WhereTheIss.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { API_URL } from './API/api-iss';\nimport Img from './Img/Iss.png';\nimport { ComposableMap, Geographies, Geography, Marker, Graticule } from \"react-simple-maps\";\nexport default function WhereTheIss() {\n  const [issData, setIssData] = useState(null);\n  const geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n  const MapChart = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchPhoto();\n\n    async function fetchPhoto() {\n      const res = await fetch(API_URL);\n      const data = await res.json();\n      setIssData(data);\n    }\n  }, []);\n  if (!issData) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"photo-nasa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: issData.url,\n    alt: issData.title,\n    className: \"photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"International Space Station\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Visibilit\\xE9 : \", issData.visibility), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Latitude : \", issData.latitude), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Longitude : \", issData.longitude), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Altitude : \", issData.altitude), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Vitesse : \", issData.velocity, \" km/h\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, issData.visibility), /*#__PURE__*/React.createElement(ComposableMap, {\n    projectionConfig: {\n      scale: 147\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Graticule, {\n    stroke: \"#F53\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, _ref => {\n    let {\n      geographies\n    } = _ref;\n    return geographies.map(geo => /*#__PURE__*/React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 32\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Marker, {\n    coordinates: [issData.longitude, issData.latitude],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    r: 4,\n    fill: \"#F53\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\",\n    fill: \"#000000\",\n    stroke: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3575 12763 c-499 -452 -772 -761 -1068 -1209 -852 -1289 -1122\\n-2868 -791 -4624 137 -727 396 -1521 709 -2176 l64 -134 1131 0 1131 0 69 144\\nc380 796 671 1780 779 2636 71 563 80 1160 25 1650 -116 1039 -473 1959 -1073\\n2765 -242 324 -499 601 -847 913 -44 39 -83 72 -85 72 -2 0 -22 -17 -44 -37z\\nm222 -3078 c386 -73 682 -347 785 -725 20 -74 23 -107 22 -255 0 -194 -15\\n-264 -82 -409 -54 -115 -112 -198 -201 -287 -126 -126 -282 -216 -453 -262\\n-70 -18 -109 -22 -248 -22 -196 1 -276 18 -435 96 -269 131 -462 375 -531 674\\n-28 118 -26 329 4 449 83 332 334 602 661 711 135 44 335 57 478 30z m-32\\n-2280 c39 -8 112 -35 163 -60 264 -131 415 -435 358 -725 -47 -239 -217 -436\\n-448 -517 -106 -38 -273 -44 -381 -14 -199 54 -355 180 -441 356 -47 94 -68\\n189 -67 305 0 115 18 188 73 300 33 69 58 101 127 170 53 53 109 98 146 117\\n58 30 164 68 215 76 58 10 190 6 255 -8z m-36 -1650 c221 -53 379 -285 342\\n-505 -22 -133 -88 -239 -191 -309 -143 -95 -321 -107 -471 -30 -52 26 -145\\n114 -176 166 -132 226 -50 522 179 639 103 53 204 65 317 39z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5512 6228 c-23 -73 -67 -238 -97 -367 -90 -382 -179 -626 -387\\n-1053 -56 -115 -99 -210 -97 -212 15 -13 250 -166 434 -283 786 -499 1294\\n-755 1604 -808 236 -41 329 56 275 285 -65 280 -337 756 -794 1395 -217 302\\n-817 1092 -884 1163 -10 10 -21 -15 -54 -120z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1573 6178 c-574 -726 -1049 -1392 -1298 -1823 -93 -160 -200 -387\\n-236 -498 -27 -83 -33 -118 -34 -189 0 -93 11 -119 67 -161 34 -26 155 -34\\n240 -17 243 47 660 245 1198 568 294 177 820 515 820 528 0 4 -41 89 -90 190\\n-143 291 -242 526 -305 724 -14 47 -56 204 -91 350 -59 243 -129 490 -139 490\\n-2 0 -61 -73 -132 -162z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: Img,\n    alt: \"mon image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(MapChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/maxencebacquart/Documents/ECE/Web/Git/PROJECT_WEB_OCRES/frontend/src/components/WhereTheIss.js"],"names":["React","useEffect","useState","API_URL","Img","ComposableMap","Geographies","Geography","Marker","Graticule","WhereTheIss","issData","setIssData","geoUrl","MapChart","fetchPhoto","res","fetch","data","json","url","title","visibility","latitude","longitude","altitude","velocity","scale","geographies","map","geo","rsmKey"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { API_URL } from './API/api-iss';\nimport Img from './Img/Iss.png';\n\n\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Graticule\n} from \"react-simple-maps\";\n\n\nexport default function WhereTheIss(){\n\n    const [issData, setIssData] = useState(null);\n\n\n    const geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = () => {\n  return (\n    <div></div>\n\n  );\n};\n    useEffect(() => {\n        fetchPhoto();\n    \n        async function fetchPhoto() {\n          const res = await fetch(\n            API_URL\n          );\n          const data = await res.json();\n          setIssData(data);\n        }\n      }, []);\n\n\n      if (!issData) return <div />;    \n\n\n    return(\n        <div className=\"photo-nasa\">\n        <img\n          src={issData.url}\n          alt={issData.title}\n          className=\"photo\"\n        />\n      <div>\n        <h1>International Space Station</h1>\n        <p>Visibilité : {issData.visibility}</p>\n        <p>Latitude : {issData.latitude}</p>\n        <p>Longitude : {issData.longitude}</p>\n        <p>Altitude : {issData.altitude}</p>\n        <p>Vitesse : {issData.velocity} km/h</p>\n   \n        <p className=\"date\">{issData.visibility}</p>\n      \n        <ComposableMap projectionConfig={{ scale: 147 }}>\n    <Graticule stroke=\"#F53\" />\n    <Geographies geography={geoUrl}>\n      {({ geographies }) =>\n        geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n      }\n    </Geographies>\n    <Marker coordinates={[issData.longitude, issData.latitude]}>\n      <circle r={4} fill=\"#F53\" />\n      <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\"\nfill=\"#000000\" stroke=\"none\">\n<path d=\"M3575 12763 c-499 -452 -772 -761 -1068 -1209 -852 -1289 -1122\n-2868 -791 -4624 137 -727 396 -1521 709 -2176 l64 -134 1131 0 1131 0 69 144\nc380 796 671 1780 779 2636 71 563 80 1160 25 1650 -116 1039 -473 1959 -1073\n2765 -242 324 -499 601 -847 913 -44 39 -83 72 -85 72 -2 0 -22 -17 -44 -37z\nm222 -3078 c386 -73 682 -347 785 -725 20 -74 23 -107 22 -255 0 -194 -15\n-264 -82 -409 -54 -115 -112 -198 -201 -287 -126 -126 -282 -216 -453 -262\n-70 -18 -109 -22 -248 -22 -196 1 -276 18 -435 96 -269 131 -462 375 -531 674\n-28 118 -26 329 4 449 83 332 334 602 661 711 135 44 335 57 478 30z m-32\n-2280 c39 -8 112 -35 163 -60 264 -131 415 -435 358 -725 -47 -239 -217 -436\n-448 -517 -106 -38 -273 -44 -381 -14 -199 54 -355 180 -441 356 -47 94 -68\n189 -67 305 0 115 18 188 73 300 33 69 58 101 127 170 53 53 109 98 146 117\n58 30 164 68 215 76 58 10 190 6 255 -8z m-36 -1650 c221 -53 379 -285 342\n-505 -22 -133 -88 -239 -191 -309 -143 -95 -321 -107 -471 -30 -52 26 -145\n114 -176 166 -132 226 -50 522 179 639 103 53 204 65 317 39z\"/>\n<path d=\"M5512 6228 c-23 -73 -67 -238 -97 -367 -90 -382 -179 -626 -387\n-1053 -56 -115 -99 -210 -97 -212 15 -13 250 -166 434 -283 786 -499 1294\n-755 1604 -808 236 -41 329 56 275 285 -65 280 -337 756 -794 1395 -217 302\n-817 1092 -884 1163 -10 10 -21 -15 -54 -120z\"/>\n<path d=\"M1573 6178 c-574 -726 -1049 -1392 -1298 -1823 -93 -160 -200 -387\n-236 -498 -27 -83 -33 -118 -34 -189 0 -93 11 -119 67 -161 34 -26 155 -34\n240 -17 243 47 660 245 1198 568 294 177 820 515 820 528 0 4 -41 89 -90 190\n-143 291 -242 526 -305 724 -14 47 -56 204 -91 350 -59 243 -129 490 -139 490\n-2 0 -61 -73 -132 -162z\"/>\n\n</g>\n\n      <img src={Img} alt=\"mon image\" />\n    \n    </Marker>\n  </ComposableMap>\n  < MapChart />\n      </div>\n\n    </div>\n\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}